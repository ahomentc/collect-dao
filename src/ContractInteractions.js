import timelockBytecode from "./ContractStuff/TimelockBytecode.json"
import lens_hub_abi from "./ContractStuff/lensHubAbi.json"
import timelock_abi from "./ContractStuff/timelockAbi.json"

export const gasStation = 'https://gasstation-mainnet.matic.network/v2'
export const network_chain_id = 137

export const lens_hub_address = "0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d"

const Web3 = require('web3');
const axios = require('axios');

export const erc721_abi = [{ "inputs": [{ "internalType": "string", "name": "name_", "type": "string" }, { "internalType": "string", "name": "symbol_", "type": "string" }], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "_data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "tokenURI", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]


const erc20_abi = [{ "inputs": [{ "internalType": "string", "name": "name_", "type": "string" }, { "internalType": "string", "name": "symbol_", "type": "string" }], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "name": "allowance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "approve", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "subtractedValue", "type": "uint256" }], "name": "decreaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "addedValue", "type": "uint256" }], "name": "increaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transfer", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }]

export const wrapped_erc721_abi = [{"inputs":[{"internalType":"address","name":"_oldNFTTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oldNFTToken","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]



export const switchToPolygon = async () => {
    if (window.ethereum) {
        try {
            await window.ethereum.request({
                method: 'wallet_switchEthereumChain',
                params: [{ chainId: '0x89' }],
            });
            return true
        }
        catch (switchError) {
            if (switchError.code === 4902) {
                try {
                    await window.ethereum.request({
                        method: 'wallet_addEthereumChain',
                        params: [
                            {
                                chainId: '0x89',
                                chainName: "Polygon",
                                nativeCurrency:
                                {
                                    name: 'MATIC',
                                    symbol: 'MATIC',
                                    decimals: 18
                                },
                                rpcUrls: ["https://polygon-rpc.com"],
                                blockExplorerUrls: ["https://polygonscan.com/"]
                            },
                        ]
                    });
                    return true
                } catch (addError) {
                    return false
                }
            }
        }
    }
    else {
        return false
    }
}

export const createTimelockContract = async (provider, account, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);
    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network")
        return;
    }

    var recieved = false
    var admin_ = account /* var of type address here */ ;
    var delay_ = 2 /* var of type uint256 here */ ;
    var timelockContract = new web3.eth.Contract([{"inputs":[{"internalType":"address","name":"admin_","type":"address"},{"internalType":"uint256","name":"delay_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"string","name":"signature","type":"string"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"eta","type":"uint256"}],"name":"CancelTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"string","name":"signature","type":"string"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"eta","type":"uint256"}],"name":"ExecuteTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"newDelay","type":"uint256"}],"name":"NewDelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"string","name":"signature","type":"string"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"eta","type":"uint256"}],"name":"QueueTransaction","type":"event"},{"inputs":[],"name":"GRACE_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAXIMUM_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"string","name":"signature","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"cancelTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"string","name":"signature","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"executeTransaction","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"pendingAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"string","name":"signature","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"queueTransaction","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"queuedTransactions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"delay_","type":"uint256"}],"name":"setDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pendingAdmin_","type":"address"}],"name":"setPendingAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]);
    var timelock = timelockContract.deploy({
        data: '', 
        arguments: [
            admin_,
            delay_,
        ]
    })
    var gas_estimate = await timelock.estimateGas()
    axios.get(gasStation).then(response => {
        timelock.send({
            from: account,
            gas: gas_estimate,
            maxPriorityFeePerGas: Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
            maxFeePerGas: Math.ceil(response.data.fast.maxFee * 1000000000),
        }).on('transactionHash', function (hash) {
            transactionCb(hash)
        }).on('receipt', function (receipt) {
            if (recieved === false) {
                recieved = true
                receiptCb(receipt)
            }
        }).on('error', (err) => {
            alert("Transaction Failed. Please try again. Error: ", err)
            errCb(err)
        });
    })
}

export const createGovContract = async (provider, account, wrappedCollectAddress, timelockAddress, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);
    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network")
        return;
    }

    var recieved = false

    var _token = wrappedCollectAddress
    var _timelock = timelockAddress
    var collectgovContract = new web3.eth.Contract([{"inputs":[{"internalType":"contract IVotes","name":"_token","type":"address"},{"internalType":"contract ICompoundTimelock","name":"_timelock","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"eta","type":"uint256"}],"name":"ProposalQueued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldProposalThreshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"ProposalThresholdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuorumNumerator","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"QuorumNumeratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldTimelock","type":"address"},{"indexed":false,"internalType":"address","name":"newTimelock","type":"address"}],"name":"TimelockChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingDelay","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"VotingDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"VotingPeriodSet","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"__acceptAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalEta","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalVotes","outputs":[{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"abstainVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"queue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"setProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"setVotingDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timelock","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IVotes","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"updateQuorumNumerator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ICompoundTimelock","name":"newTimelock","type":"address"}],"name":"updateTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]);
    var collectgov = collectgovContract.deploy({
        data: '0x6101606040523480156200001257600080fd5b506040516200496f3803806200496f8339810160408190526200003591620007fa565b80600483600161c4e060006040518060400160405280600a81526020016921b7b63632b1ba23b7bb60b11b81525080620000746200017560201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060601b60c05261012052505082516200011d92506000915060208401906200075e565b506200012b90508362000190565b6200013682620001d1565b620001418162000278565b50505060601b6001600160601b031916610140526200016081620002b9565b506200016c8162000431565b505050620008cb565b6040805180820190915260018152603160f81b602082015290565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60008111620002375760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b60648111156200033e5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016200022e565b60006200034a6200049a565b905080158015906200035c5750600954155b15620003d75760096000016040518060400160405280600063ffffffff1681526020016200039584620004c960201b6200163c1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620003f28260096200053860201b620016a91790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b600a54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60095460009015620004c257620004bd60096200069460201b620017d41760201c565b905090565b5060085490565b60006001600160e01b03821115620005345760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016200022e565b5090565b81546000908190816200054b8662000694565b90506000821180156200058f575043866200056860018562000839565b815481106200057b576200057b6200089c565b60009182526020909120015463ffffffff16145b156200060357620005ab85620004c960201b6200163c1760201c565b86620005b960018562000839565b81548110620005cc57620005cc6200089c565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506200068b565b8560000160405180604001604052806200062843620006f760201b620018301760201c565b63ffffffff1681526020016200064988620004c960201b6200163c1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b95939450505050565b80546000908015620006e45782620006ae60018362000839565b81548110620006c157620006c16200089c565b60009182526020909120015464010000000090046001600160e01b0316620006e7565b60005b6001600160e01b03169392505050565b600063ffffffff821115620005345760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016200022e565b8280546200076c906200085f565b90600052602060002090601f016020900481019282620007905760008555620007db565b82601f10620007ab57805160ff1916838001178555620007db565b82800160010185558215620007db579182015b82811115620007db578251825591602001919060010190620007be565b50620005349291505b80821115620005345760008155600101620007e4565b600080604083850312156200080e57600080fd5b82516200081b81620008b2565b60208401519092506200082e81620008b2565b809150509250929050565b6000828210156200085a57634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200087457607f821691505b602082108114156200089657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114620008c857600080fd5b50565b60805160a05160c05160601c60e05161010051610120516101405160601c6140356200093a600039600081816108960152818161230101526125110152600061269c015260006126eb015260006126c60152600061261f015260006126490152600061267301526140356000f3fe6080604052600436106102555760003560e01c80637d5e81e211610139578063c28bc2fa116100b6578063ea0217cf1161007a578063ea0217cf146107d8578063eb9019d4146107f8578063ece40cc114610818578063f23a6e6114610838578063f8ce560a14610864578063fc0c546a1461088457600080fd5b8063c28bc2fa146106ec578063c59057e41461070c578063d33219b41461072c578063dd4e2ba51461075e578063deaaa7cc146107a457600080fd5b8063ab58fb8e116100fd578063ab58fb8e14610656578063b58131b014610676578063b9a619611461068b578063bc197c81146106a0578063c01f9e37146106cc57600080fd5b80637d5e81e2146105cd57806397c3d334146105ed5780639a802a6d14610601578063a7713a7014610621578063a890c9101461063657600080fd5b80633932abb1116101d257806354fd4d501161019657806354fd4d5014610503578063567813881461052d5780635f398a141461054d57806360c4247f1461056d57806370b0f6601461058d5780637b3c71d3146105ad57600080fd5b80633932abb1146104025780633bccf4fd146104175780633e4f49e6146104375780634385963214610464578063544ffc9c146104ae57600080fd5b8063150b7a0211610219578063150b7a0214610337578063160cbed71461037b5780632656227d1461039b5780632d63f693146103ae5780632fe3e261146103ce57600080fd5b806301ffc9a71461027d57806302a251a3146102b257806303420181146102d557806306f3f9e6146102f557806306fdde031461031557600080fd5b3661027857306102636108b8565b6001600160a01b03161461027657600080fd5b005b600080fd5b34801561028957600080fd5b5061029d610298366004613708565b6108d1565b60405190151581526020015b60405180910390f35b3480156102be57600080fd5b506102c76108e2565b6040519081526020016102a9565b3480156102e157600080fd5b506102c76102f03660046138db565b6108ed565b34801561030157600080fd5b506102766103103660046137bc565b6109e5565b34801561032157600080fd5b5061032a610a7d565b6040516102a99190613ba9565b34801561034357600080fd5b506103626103523660046133d8565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102a9565b34801561038757600080fd5b506102c761039636600461358a565b610b0f565b6102c76103a936600461358a565b610eb5565b3480156103ba57600080fd5b506102c76103c93660046137bc565b610fa2565b3480156103da57600080fd5b506102c77fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561040e57600080fd5b506102c7610fd9565b34801561042357600080fd5b506102c7610432366004613981565b610fe4565b34801561044357600080fd5b506104576104523660046137bc565b61105a565b6040516102a99190613b81565b34801561047057600080fd5b5061029d61047f3660046137d5565b60008281526007602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156104ba57600080fd5b506104e86104c93660046137bc565b6000908152600760205260409020805460018201546002909201549092565b604080519384526020840192909252908201526060016102a9565b34801561050f57600080fd5b506040805180820190915260018152603160f81b602082015261032a565b34801561053957600080fd5b506102c7610548366004613805565b611065565b34801561055957600080fd5b506102c7610568366004613872565b61108e565b34801561057957600080fd5b506102c76105883660046137bc565b6110d8565b34801561059957600080fd5b506102766105a83660046137bc565b61116e565b3480156105b957600080fd5b506102c76105c8366004613831565b6111fa565b3480156105d957600080fd5b506102c76105e8366004613619565b61124c565b3480156105f957600080fd5b5060646102c7565b34801561060d57600080fd5b506102c761061c366004613532565b611263565b34801561062d57600080fd5b506102c761127a565b34801561064257600080fd5b5061027661065136600461379f565b611296565b34801561066257600080fd5b506102c76106713660046137bc565b611322565b34801561068257600080fd5b506102c761134e565b34801561069757600080fd5b50610276611359565b3480156106ac57600080fd5b506103626106bb36600461332b565b63bc197c8160e01b95945050505050565b3480156106d857600080fd5b506102c76106e73660046137bc565b6113c3565b3480156106f857600080fd5b506102766107073660046134d7565b6113f2565b34801561071857600080fd5b506102c761072736600461358a565b6114be565b34801561073857600080fd5b50600a546001600160a01b03165b6040516001600160a01b0390911681526020016102a9565b34801561076a57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e9082015261032a565b3480156107b057600080fd5b506102c77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b3480156107e457600080fd5b506102766107f33660046137bc565b6114f8565b34801561080457600080fd5b506102c76108133660046134ab565b611584565b34801561082457600080fd5b506102766108333660046137bc565b6115a5565b34801561084457600080fd5b50610362610853366004613443565b63f23a6e6160e01b95945050505050565b34801561087057600080fd5b506102c761087f3660046137bc565b611631565b34801561089057600080fd5b506107467f000000000000000000000000000000000000000000000000000000000000000081565b60006108cc600a546001600160a01b031690565b905090565b60006108dc82611895565b92915050565b60006108cc60055490565b6000806109916109897fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c604051610929929190613ac4565b60405180910390208b8051906020012060405160200161096e959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b604051602081830303815290604052805190602001206118ba565b868686611908565b90506109d78a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250611926915050565b9a9950505050505050505050565b6109ed6108b8565b6001600160a01b0316336001600160a01b031614610a265760405162461bcd60e51b8152600401610a1d90613bbc565b60405180910390fd5b30610a2f6108b8565b6001600160a01b031614610a715760008036604051610a4f929190613ac4565b604051809103902090505b80610a656002611a88565b14610a6f57610a5a565b505b610a7a81611b14565b50565b606060008054610a8c90613f13565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab890613f13565b8015610b055780601f10610ada57610100808354040283529160200191610b05565b820191906000526020600020905b815481529060010190602001808311610ae857829003601f168201915b5050505050905090565b600080610b1e868686866114be565b90506004610b2b8261105a565b6007811115610b3c57610b3c613f7f565b14610b595760405162461bcd60e51b8152600401610a1d90613c34565b600a5460408051630d48571f60e31b815290516000926001600160a01b031691636a42b8f8916004808301926020929190829003018186803b158015610b9e57600080fd5b505afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd691906136ef565b610be09042613e4c565b9050610c02610bee82611c61565b6000848152600b6020526040902090611cc9565b60005b8751811015610e7157600a5488516001600160a01b039091169063f2b06537908a9084908110610c3757610c37613f95565b6020026020010151898481518110610c5157610c51613f95565b6020026020010151898581518110610c6b57610c6b613f95565b602002602001015186604051602001610c879493929190613af0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610cbb91815260200190565b60206040518083038186803b158015610cd357600080fd5b505afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b91906136cd565b15610d895760405162461bcd60e51b815260206004820152604260248201527f476f7665726e6f7254696d656c6f636b436f6d706f756e643a206964656e746960448201527f63616c2070726f706f73616c20616374696f6e20616c72656164792071756575606482015261195960f21b608482015260a401610a1d565b600a5488516001600160a01b0390911690633a66f901908a9084908110610db257610db2613f95565b6020026020010151898481518110610dcc57610dcc613f95565b6020026020010151898581518110610de657610de6613f95565b6020026020010151866040518563ffffffff1660e01b8152600401610e0e9493929190613af0565b602060405180830381600087803b158015610e2857600080fd5b505af1158015610e3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6091906136ef565b50610e6a81613f4e565b9050610c05565b5060408051838152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892910160405180910390a15095945050505050565b600080610ec4868686866114be565b90506000610ed18261105a565b90506004816007811115610ee757610ee7613f7f565b1480610f0457506005816007811115610f0257610f02613f7f565b145b610f205760405162461bcd60e51b8152600401610a1d90613c34565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610f7e8288888888611ce7565b610f8b8288888888611d89565b610f988288888888611d96565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60006108cc60045490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190611032906109899060800161096e565b905061104f87828860405180602001604052806000815250611dd3565b979650505050505050565b60006108dc82611df6565b60008033905061108684828560405180602001604052806000815250611dd3565b949350505050565b60008033905061104f87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611926915050565b600954600090806110ed575050600854919050565b600060096110fc600184613ed0565b8154811061110c5761110c613f95565b60009182526020918290206040805180820190915291015463ffffffff81168083526401000000009091046001600160e01b0316928201929092529150841061116357602001516001600160e01b03169392505050565b611086600985611ee6565b6111766108b8565b6001600160a01b0316336001600160a01b0316146111a65760405162461bcd60e51b8152600401610a1d90613bbc565b306111af6108b8565b6001600160a01b0316146111f157600080366040516111cf929190613ac4565b604051809103902090505b806111e56002611a88565b146111ef576111da565b505b610a7a81611ff5565b60008033905061124286828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dd392505050565b9695505050505050565b600061125a85858585612036565b95945050505050565b60006112708484846122d8565b90505b9392505050565b6009546000901561128f576108cc60096117d4565b5060085490565b61129e6108b8565b6001600160a01b0316336001600160a01b0316146112ce5760405162461bcd60e51b8152600401610a1d90613bbc565b306112d76108b8565b6001600160a01b03161461131957600080366040516112f7929190613ac4565b604051809103902090505b8061130d6002611a88565b1461131757611302565b505b610a7a8161237d565b6000818152600b602090815260408083208151928301909152546001600160401b031690819052610fca565b60006108cc60065490565b600a60009054906101000a90046001600160a01b03166001600160a01b0316630e18b6816040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113a957600080fd5b505af11580156113bd573d6000803e3d6000fd5b50505050565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610fca565b6113fa6108b8565b6001600160a01b0316336001600160a01b03161461142a5760405162461bcd60e51b8152600401610a1d90613bbc565b306114336108b8565b6001600160a01b0316146114755760008036604051611453929190613ac4565b604051809103902090505b806114696002611a88565b146114735761145e565b505b6114b78483838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506123e6915050565b5050505050565b6000848484846040516020016114d79493929190613b36565b60408051601f19818403018152919052805160209091012095945050505050565b6115006108b8565b6001600160a01b0316336001600160a01b0316146115305760405162461bcd60e51b8152600401610a1d90613bbc565b306115396108b8565b6001600160a01b03161461157b5760008036604051611559929190613ac4565b604051809103902090505b8061156f6002611a88565b1461157957611564565b505b610a7a8161240c565b600061127383836115a060408051602081019091526000815290565b6122d8565b6115ad6108b8565b6001600160a01b0316336001600160a01b0316146115dd5760405162461bcd60e51b8152600401610a1d90613bbc565b306115e66108b8565b6001600160a01b0316146116285760008036604051611606929190613ac4565b604051809103902090505b8061161c6002611a88565b1461162657611611565b505b610a7a816124ad565b60006108dc826124ee565b60006001600160e01b038211156116a55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610a1d565b5090565b81546000908190816116ba866117d4565b90506000821180156116f8575043866116d4600185613ed0565b815481106116e4576116e4613f95565b60009182526020909120015463ffffffff16145b15611758576117068561163c565b86611712600185613ed0565b8154811061172257611722613f95565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506117c6565b85600001604051806040016040528061177043611830565b63ffffffff1681526020016117848861163c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b9250839150505b9250929050565b8054600090801561181d57826117eb600183613ed0565b815481106117fb576117fb613f95565b60009182526020909120015464010000000090046001600160e01b0316611820565b60005b6001600160e01b03169392505050565b600063ffffffff8211156116a55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610a1d565b60006001600160e01b03198216636e665ced60e01b14806108dc57506108dc826125a7565b60006108dc6118c7612612565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061191987878787612739565b91509150610f9881612826565b60008581526001602081905260408220906119408861105a565b600781111561195157611951613f7f565b146119aa5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a1d565b604080516020810190915281546001600160401b0316908190526000906119d3908890866122d8565b90506119e288888884886129e1565b8351611a3457866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda489888489604051611a279493929190613d64565b60405180910390a261104f565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611a75959493929190613d8c565b60405180910390a2979650505050505050565b6000611aa78254600f81810b810b600160801b909204810b900b131590565b15611ac557604051631ed9509560e11b815260040160405180910390fd5b508054600f90810b80820b820b600090815260018085016020526040822080549290558454920190920b6001600160801b03166fffffffffffffffffffffffffffffffff199091161790915590565b6064811115611b975760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a1d565b6000611ba161127a565b90508015801590611bb25750600954155b15611c1757604080518082019091526000815260099060208101611bd58461163c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b611c226009836116a9565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b60006001600160401b038211156116a55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610a1d565b815467ffffffffffffffff19166001600160401b0391909116179055565b30611cf06108b8565b6001600160a01b0316146114b75760005b8451811015611d8157306001600160a01b0316858281518110611d2657611d26613f95565b60200260200101516001600160a01b03161415611d7157611d71838281518110611d5257611d52613f95565b6020026020010151805190602001206002612b6090919063ffffffff16565b611d7a81613f4e565b9050611d01565b505050505050565b6114b78585858585612ba6565b30611d9f6108b8565b6001600160a01b0316146114b757600254600f81810b810b600160801b909204810b900b13156114b75760006002556114b7565b600061125a85858585611df160408051602081019091526000815290565b611926565b600080611e0283612d34565b90506004816007811115611e1857611e18613f7f565b14611e235792915050565b6000611e2e84611322565b905080611e3c575092915050565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015611e8a57600080fd5b505afa158015611e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec291906136ef565b611ecc9082613e4c565b4210611edc575060069392505050565b5060059392505050565b6000438210611f375760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610a1d565b825460005b81811015611f9c576000611f508284612e40565b905084866000018281548110611f6857611f68613f95565b60009182526020909120015463ffffffff161115611f8857809250611f96565b611f93816001613e4c565b91505b50611f3c565b8115611fe05784611fae600184613ed0565b81548110611fbe57611fbe613f95565b60009182526020909120015464010000000090046001600160e01b0316611fe3565b60005b6001600160e01b031695945050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b600061204061134e565b61204f33610813600143613ed0565b10156120b75760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610a1d565b60006120cc86868686805190602001206114be565b905084518651146120ef5760405162461bcd60e51b8152600401610a1d90613bf3565b83518651146121105760405162461bcd60e51b8152600401610a1d90613bf3565b60008651116121615760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a1d565b600081815260016020908152604091829020825191820190925281546001600160401b031690819052156121e15760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a1d565b60006121f36121ee610fd9565b611c61565b6121fc43611c61565b6122069190613e64565b905060006122156121ee6108e2565b61221f9083613e64565b905061222b8383611cc9565b6122386001840182611cc9565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b0381111561227657612276613fab565b6040519080825280602002602001820160405280156122a957816020015b60608152602001906001900390816122945790505b508c88888e6040516122c399989796959493929190613c75565b60405180910390a15091979650505050505050565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b15801561234557600080fd5b505afa158015612359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127091906136ef565b600a54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6060611270848484604051806060016040528060298152602001613fd760299139612e5b565b6000811161246c5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610a1d565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b600060646124fb836110d8565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561255b57600080fd5b505afa15801561256f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259391906136ef565b61259d9190613eb1565b6108dc9190613e8f565b60006001600160e01b0319821663bf26d89760e01b14806125d857506001600160e01b031982166379dd796f60e01b145b806125f357506001600160e01b03198216630271189760e51b145b806108dc57506301ffc9a760e01b6001600160e01b03198316146108dc565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561266b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561269557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612770575060009050600361281d565b8460ff16601b1415801561278857508460ff16601c14155b15612799575060009050600461281d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156127ed573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166128165760006001925092505061281d565b9150600090505b94509492505050565b600081600481111561283a5761283a613f7f565b14156128435750565b600181600481111561285757612857613f7f565b14156128a55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a1d565b60028160048111156128b9576128b9613f7f565b14156129075760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a1d565b600381600481111561291b5761291b613f7f565b14156129745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a1d565b600481600481111561298857612988613f7f565b1415610a7a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610a1d565b60008581526007602090815260408083206001600160a01b0388168452600381019092529091205460ff1615612a695760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608401610a1d565b6001600160a01b03851660009081526003820160205260408120805460ff1916600117905560ff168460ff161415612aba5782816000016000828254612aaf9190613e4c565b90915550611d819050565b60ff841660011415612ada5782816001016000828254612aaf9190613e4c565b60ff841660021415612afa5782816002016000828254612aaf9190613e4c565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610a1d565b8154600160801b90819004600f90810b80820b820b6000908152600180870160205260409091209490945584549301900b6001600160801b039081169091029116179055565b6000612bb186611322565b905060008111612c1d5760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f7254696d656c6f636b436f6d706f756e643a2070726f706f73604482015270185b081b9bdd081e595d081c5d595d5959607a1b6064820152608401610a1d565b600a54612c33906001600160a01b031634612f81565b60005b8551811015612d2b57600a5486516001600160a01b0390911690630825f38f90889084908110612c6857612c68613f95565b6020026020010151878481518110612c8257612c82613f95565b6020026020010151878581518110612c9c57612c9c613f95565b6020026020010151866040518563ffffffff1660e01b8152600401612cc49493929190613af0565b600060405180830381600087803b158015612cde57600080fd5b505af1158015612cf2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612d1a9190810190613732565b50612d2481613f4e565b9050612c36565b50505050505050565b6000818152600160205260408120600281015460ff1615612d585750600792915050565b6002810154610100900460ff1615612d735750600292915050565b6000612d7e84610fa2565b905080612dcd5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a1d565b438110612dde575060009392505050565b6000612de9856113c3565b9050438110612dfd57506001949350505050565b612e068561309f565b8015612e25575060008581526007602052604090208054600190910154115b15612e3557506004949350505050565b506003949350505050565b6000612e4f6002848418613e8f565b61127390848416613e4c565b606082471015612ebc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a1d565b6001600160a01b0385163b612f135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a1d565b600080866001600160a01b03168587604051612f2f9190613ad4565b60006040518083038185875af1925050503d8060008114612f6c576040519150601f19603f3d011682016040523d82523d6000602084013e612f71565b606091505b509150915061104f8282866130d6565b80471015612fd15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a1d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461301e576040519150601f19603f3d011682016040523d82523d6000602084013e613023565b606091505b505090508061309a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a1d565b505050565b6000818152600760205260408120600281015460018201546130c19190613e4c565b6130cd61087f85610fa2565b11159392505050565b606083156130e5575081611273565b8251156130f55782518084602001fd5b8160405162461bcd60e51b8152600401610a1d9190613ba9565b600061312261311d84613e25565b613dd2565b905082815283838301111561313657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261315e57600080fd5b8135602061316e61311d83613e02565b80838252828201915082860187848660051b890101111561318e57600080fd5b60005b858110156131b65781356131a481613fc1565b84529284019290840190600101613191565b5090979650505050505050565b600082601f8301126131d457600080fd5b813560206131e461311d83613e02565b80838252828201915082860187848660051b890101111561320457600080fd5b6000805b868110156132465782356001600160401b03811115613225578283fd5b6132338b88838d01016132f5565b8652509385019391850191600101613208565b509198975050505050505050565b600082601f83011261326557600080fd5b8135602061327561311d83613e02565b80838252828201915082860187848660051b890101111561329557600080fd5b60005b858110156131b657813584529284019290840190600101613298565b60008083601f8401126132c657600080fd5b5081356001600160401b038111156132dd57600080fd5b6020830191508360208285010111156117cd57600080fd5b600082601f83011261330657600080fd5b6112738383356020850161310f565b803560ff8116811461332657600080fd5b919050565b600080600080600060a0868803121561334357600080fd5b853561334e81613fc1565b9450602086013561335e81613fc1565b935060408601356001600160401b038082111561337a57600080fd5b61338689838a01613254565b9450606088013591508082111561339c57600080fd5b6133a889838a01613254565b935060808801359150808211156133be57600080fd5b506133cb888289016132f5565b9150509295509295909350565b600080600080608085870312156133ee57600080fd5b84356133f981613fc1565b9350602085013561340981613fc1565b92506040850135915060608501356001600160401b0381111561342b57600080fd5b613437878288016132f5565b91505092959194509250565b600080600080600060a0868803121561345b57600080fd5b853561346681613fc1565b9450602086013561347681613fc1565b9350604086013592506060860135915060808601356001600160401b0381111561349f57600080fd5b6133cb888289016132f5565b600080604083850312156134be57600080fd5b82356134c981613fc1565b946020939093013593505050565b600080600080606085870312156134ed57600080fd5b84356134f881613fc1565b93506020850135925060408501356001600160401b0381111561351a57600080fd5b613526878288016132b4565b95989497509550505050565b60008060006060848603121561354757600080fd5b833561355281613fc1565b92506020840135915060408401356001600160401b0381111561357457600080fd5b613580868287016132f5565b9150509250925092565b600080600080608085870312156135a057600080fd5b84356001600160401b03808211156135b757600080fd5b6135c38883890161314d565b955060208701359150808211156135d957600080fd5b6135e588838901613254565b945060408701359150808211156135fb57600080fd5b50613608878288016131c3565b949793965093946060013593505050565b6000806000806080858703121561362f57600080fd5b84356001600160401b038082111561364657600080fd5b6136528883890161314d565b9550602087013591508082111561366857600080fd5b61367488838901613254565b9450604087013591508082111561368a57600080fd5b613696888389016131c3565b935060608701359150808211156136ac57600080fd5b508501601f810187136136be57600080fd5b6134378782356020840161310f565b6000602082840312156136df57600080fd5b8151801515811461127357600080fd5b60006020828403121561370157600080fd5b5051919050565b60006020828403121561371a57600080fd5b81356001600160e01b03198116811461127357600080fd5b60006020828403121561374457600080fd5b81516001600160401b0381111561375a57600080fd5b8201601f8101841361376b57600080fd5b805161377961311d82613e25565b81815285602083850101111561378e57600080fd5b61125a826020830160208601613ee7565b6000602082840312156137b157600080fd5b813561127381613fc1565b6000602082840312156137ce57600080fd5b5035919050565b600080604083850312156137e857600080fd5b8235915060208301356137fa81613fc1565b809150509250929050565b6000806040838503121561381857600080fd5b8235915061382860208401613315565b90509250929050565b6000806000806060858703121561384757600080fd5b8435935061385760208601613315565b925060408501356001600160401b0381111561351a57600080fd5b60008060008060006080868803121561388a57600080fd5b8535945061389a60208701613315565b935060408601356001600160401b03808211156138b657600080fd5b6138c289838a016132b4565b909550935060608801359150808211156133be57600080fd5b60008060008060008060008060e0898b0312156138f757600080fd5b8835975061390760208a01613315565b965060408901356001600160401b038082111561392357600080fd5b61392f8c838d016132b4565b909850965060608b013591508082111561394857600080fd5b506139558b828c016132f5565b94505061396460808a01613315565b925060a0890135915060c089013590509295985092959890939650565b600080600080600060a0868803121561399957600080fd5b853594506139a960208701613315565b93506139b760408701613315565b94979396509394606081013594506080013592915050565b600081518084526020808501945080840160005b83811015613a085781516001600160a01b0316875295820195908201906001016139e3565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015613a5b578284038952613a49848351613a98565b98850198935090840190600101613a31565b5091979650505050505050565b600081518084526020808501945080840160005b83811015613a0857815187529582019590820190600101613a7c565b60008151808452613ab0816020860160208601613ee7565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b60008251613ae6818460208701613ee7565b9190910192915050565b60018060a01b038516815283602082015260a06040820152600060a082015260c060608201526000613b2560c0830185613a98565b905082608083015295945050505050565b608081526000613b4960808301876139cf565b8281036020840152613b5b8187613a68565b90508281036040840152613b6f8186613a13565b91505082606083015295945050505050565b6020810160088310613ba357634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006112736020830184613a98565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b60006101208b8352602060018060a01b038c1681850152816040850152613c9e8285018c6139cf565b91508382036060850152613cb2828b613a68565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015613d0357601f19878403018552613cf1838351613a98565b94860194925090850190600101613cd5565b505086810360a0880152613d17818c613a13565b945050505050613d3260c08401876001600160401b03169052565b6001600160401b03851660e0840152828103610100840152613d548185613a98565b9c9b505050505050505050505050565b84815260ff841660208201528260408201526080606082015260006112426080830184613a98565b85815260ff8516602082015283604082015260a060608201526000613db460a0830185613a98565b8281036080840152613dc68185613a98565b98975050505050505050565b604051601f8201601f191681016001600160401b0381118282101715613dfa57613dfa613fab565b604052919050565b60006001600160401b03821115613e1b57613e1b613fab565b5060051b60200190565b60006001600160401b03821115613e3e57613e3e613fab565b50601f01601f191660200190565b60008219821115613e5f57613e5f613f69565b500190565b60006001600160401b03808316818516808303821115613e8657613e86613f69565b01949350505050565b600082613eac57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615613ecb57613ecb613f69565b500290565b600082821015613ee257613ee2613f69565b500390565b60005b83811015613f02578181015183820152602001613eea565b838111156113bd5750506000910152565b600181811c90821680613f2757607f821691505b60208210811415613f4857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415613f6257613f62613f69565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610a7a57600080fdfe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a264697066735822122007df7a881ff73785b87e0368eb36afdd5f70771125b93c89810db194d26f357264736f6c63430008060033', 
        arguments: [
            _token,
            _timelock,
        ]
    })
    var gas_estimate = await collectgov.estimateGas()
    axios.get(gasStation).then(response => {
        collectgov.send({
            from: account,
            gas: gas_estimate * 2,
            maxPriorityFeePerGas: Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
            maxFeePerGas: Math.ceil(response.data.fast.maxFee * 1000000000),
        }).on('transactionHash', function (hash) {
            transactionCb(hash)
        }).on('receipt', function (receipt) {
            if (recieved === false) {
                recieved = true
                receiptCb(receipt)
            }
        }).on('error', (err) => {
            alert("Transaction Failed. Please try again. Error: ", err)
            errCb(err)
        });
    })
}

export const createWrappedCollectContract = async (provider, account, collectNFT, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);
    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network")
        return;
    }

    var recieved = false

    var wrappedcollectContract = new web3.eth.Contract([{"inputs":[{"internalType":"address","name":"_oldNFTTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oldNFTToken","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]);
    
    var wrappedcollect = wrappedcollectContract.deploy({
     data: '0x6101406040523480156200001257600080fd5b506040516200291d3803806200291d8339810160408190526200003591620002bb565b6040518060400160405280600e81526020016d15dc985c1c195910dbdb1b1958dd60921b815250604051806040016040528060018152602001603160f81b8152506040518060400160405280600e81526020016d15dc985c1c195910dbdb1b1958dd60921b81525060405180604001604052806002815260200161574360f01b8152508160009080519060200190620000d092919062000215565b508051620000e690600190602084019062000215565b50505062000103620000fd620001bf60201b60201c565b620001c3565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060601b60c052610120525050600b80546001600160a01b0319166001600160a01b039490941693909317909255506200032a9050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200022390620002ed565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002a4565b5090565b5b80821115620002a05760008155600101620002a5565b600060208284031215620002ce57600080fd5b81516001600160a01b0381168114620002e657600080fd5b9392505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160601c60e05161010051610120516125a06200037d6000396000611013015260006110620152600061103d01526000610f9601526000610fc001526000610fea01526125a06000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a22cb46511610097578063c3cda52011610071578063c3cda520146103eb578063c87b56dd146103fe578063e985e9c514610411578063f2fde38b1461044d57600080fd5b8063a22cb465146103b2578063a694fc3a146103c5578063b88d4fde146103d857600080fd5b80638da5cb5b116100d35780638da5cb5b146103735780638e539e8c1461038457806395d89b41146103975780639ab24eb01461039f57600080fd5b806370a0823114610345578063715018a6146103585780637ecebe001461036057600080fd5b80633644e51511610166578063587cde1e11610140578063587cde1e146102e05780635c19a95c1461030c57806363143e791461031f5780636352211e1461033257600080fd5b80633644e515146102a45780633a46b1a8146102ba57806342842e0e146102cd57600080fd5b8063095ea7b3116101a2578063095ea7b314610231578063150b7a021461024657806323b872dd1461027e5780632e1a7d4d1461029157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004612235565b610460565b60405190151581526020015b60405180910390f35b6101f96104b2565b6040516101e89190612360565b61021961021436600461226f565b610544565b6040516001600160a01b0390911681526020016101e8565b61024461023f3660046121ab565b61056b565b005b610265610254366004611ff8565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101e8565b61024461028c366004611fbc565b610686565b61024461029f36600461226f565b6106b7565b6102ac610729565b6040519081526020016101e8565b6102ac6102c83660046121ab565b610738565b6102446102db366004611fbc565b610761565b6102196102ee366004611f6e565b6001600160a01b039081166000908152600760205260409020541690565b61024461031a366004611f6e565b61077c565b600b54610219906001600160a01b031681565b61021961034036600461226f565b61078b565b6102ac610353366004611f6e565b6107eb565b610244610871565b6102ac61036e366004611f6e565b610885565b6006546001600160a01b0316610219565b6102ac61039236600461226f565b6108a3565b6101f96108ff565b6102ac6103ad366004611f6e565b61090e565b6102446103c036600461216f565b61092f565b6102446103d336600461226f565b61093a565b6102446103e6366004612093565b6109aa565b6102446103f93660046121d5565b6109e2565b6101f961040c36600461226f565b610b0f565b6101dc61041f366004611f89565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61024461045b366004611f6e565b610b82565b60006001600160e01b031982166380ac58cd60e01b148061049157506001600160e01b03198216635b5e139f60e01b145b806104ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104c190612482565b80601f01602080910402602001604051908101604052809291908181526020018280546104ed90612482565b801561053a5780601f1061050f5761010080835404028352916020019161053a565b820191906000526020600020905b81548152906001019060200180831161051d57829003601f168201915b5050505050905090565b600061054f82610bf8565b506000908152600460205260409020546001600160a01b031690565b60006105768261078b565b9050806001600160a01b0316836001600160a01b031614156105e95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106055750610605813361041f565b6106775760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105e0565b6106818383610c57565b505050565b6106903382610cc5565b6106ac5760405162461bcd60e51b81526004016105e0906123c5565b610681838383610d44565b600b54604051635c46a7ef60e11b81526001600160a01b039091169063b88d4fde906106eb90309033908690600401612320565b600060405180830381600087803b15801561070557600080fd5b505af1158015610719573d6000803e3d6000fd5b5050505061072681610ee6565b50565b6000610733610f89565b905090565b6001600160a01b038216600090815260086020526040812061075a90836110b0565b9392505050565b610681838383604051806020016040528060008152506109aa565b3361078781836111bf565b5050565b6000818152600260205260408120546001600160a01b0316806104ac5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105e0565b60006001600160a01b0382166108555760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105e0565b506001600160a01b031660009081526003602052604090205490565b610879611231565b610883600061128b565b565b6001600160a01b0381166000908152600a60205260408120546104ac565b60004382106108f45760405162461bcd60e51b815260206004820152601a60248201527f566f7465733a20626c6f636b206e6f7420796574206d696e656400000000000060448201526064016105e0565b6104ac6009836110b0565b6060600180546104c190612482565b6001600160a01b03811660009081526008602052604081206104ac906112dd565b610787338383611339565b600b54604051635c46a7ef60e11b81526001600160a01b039091169063b88d4fde9061096e90339030908690600401612320565b600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b505050506107263382611408565b6109b43383610cc5565b6109d05760405162461bcd60e51b81526004016105e0906123c5565b6109dc84848484611412565b50505050565b83421115610a325760405162461bcd60e51b815260206004820152601860248201527f566f7465733a207369676e61747572652065787069726564000000000000000060448201526064016105e0565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610aac90610aa49060a00160405160208183030381529060405280519060200120611445565b858585611493565b9050610ab7816114bb565b8614610afc5760405162461bcd60e51b8152602060048201526014602482015273566f7465733a20696e76616c6964206e6f6e636560601b60448201526064016105e0565b610b0681886111bf565b50505050505050565b6060610b1a82610bf8565b6000610b3160408051602081019091526000815290565b90506000815111610b51576040518060200160405280600081525061075a565b80610b5b846114e3565b604051602001610b6c9291906122b4565b6040516020818303038152906040529392505050565b610b8a611231565b6001600160a01b038116610bef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e0565b6107268161128b565b6000818152600260205260409020546001600160a01b03166107265760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105e0565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c8c8261078b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cd18361078b565b9050806001600160a01b0316846001600160a01b03161480610d1857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d3c5750836001600160a01b0316610d3184610544565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d578261078b565b6001600160a01b031614610dbb5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105e0565b6001600160a01b038216610e1d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e0565b610e28600082610c57565b6001600160a01b0383166000908152600360205260408120805460019290610e5190849061243f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e7f908490612413565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a46106818383836115e1565b6000610ef18261078b565b9050610efe600083610c57565b6001600160a01b0381166000908152600360205260408120805460019290610f2790849061243f565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4610787816000846115e1565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fe257507f000000000000000000000000000000000000000000000000000000000000000046145b1561100c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60004382106111015760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e656460448201526064016105e0565b825460005b8181101561116657600061111a82846115ec565b90508486600001828154811061113257611132612528565b60009182526020909120015463ffffffff16111561115257809250611160565b61115d816001612413565b91505b50611106565b81156111aa578461117860018461243f565b8154811061118857611188612528565b60009182526020909120015464010000000090046001600160e01b03166111ad565b60005b6001600160e01b031695945050505050565b6001600160a01b0382811660008181526007602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610681818361122c86611607565b611612565b6006546001600160a01b031633146108835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8054600090801561132657826112f460018361243f565b8154811061130457611304612528565b60009182526020909120015464010000000090046001600160e01b0316611329565b60005b6001600160e01b03169392505050565b816001600160a01b0316836001600160a01b0316141561139b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105e0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610787828261174f565b61141d848484610d44565b61142984848484611769565b6109dc5760405162461bcd60e51b81526004016105e090612373565b60006104ac611452610f89565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114a487878787611873565b915091506114b181611960565b5095945050505050565b6001600160a01b0381166000908152600a602052604090208054600181018255905b50919050565b6060816115075750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611531578061151b816124b7565b915061152a9050600a8361242b565b915061150b565b60008167ffffffffffffffff81111561154c5761154c61253e565b6040519080825280601f01601f191660200182016040528015611576576020820181803683370190505b5090505b8415610d3c5761158b60018361243f565b9150611598600a866124d2565b6115a3906030612413565b60f81b8183815181106115b8576115b8612528565b60200101906001600160f81b031916908160001a9053506115da600a8661242b565b945061157a565b610681838383611b1b565b60006115fb600284841861242b565b61075a90848416612413565b60006104ac826107eb565b816001600160a01b0316836001600160a01b0316141580156116345750600081115b15610681576001600160a01b038316156116c2576001600160a01b0383166000908152600860205260408120819061166f90611b2785611b33565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516116b7929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610681576001600160a01b038216600090815260086020526040812081906116f890611b6185611b33565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611740929190918252602082015260400190565b60405180910390a25050505050565b610787828260405180602001604052806000815250611b6d565b60006001600160a01b0384163b1561186b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117ad9033908990889088906004016122e3565b602060405180830381600087803b1580156117c757600080fd5b505af19250505080156117f7575060408051601f3d908101601f191682019092526117f491810190612252565b60015b611851573d808015611825576040519150601f19603f3d011682016040523d82523d6000602084013e61182a565b606091505b5080516118495760405162461bcd60e51b81526004016105e090612373565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d3c565b506001610d3c565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118aa5750600090506003611957565b8460ff16601b141580156118c257508460ff16601c14155b156118d35750600090506004611957565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611927573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661195057600060019250925050611957565b9150600090505b94509492505050565b600081600481111561197457611974612512565b141561197d5750565b600181600481111561199157611991612512565b14156119df5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e0565b60028160048111156119f3576119f3612512565b1415611a415760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e0565b6003816004811115611a5557611a55612512565b1415611aae5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e0565b6004816004811115611ac257611ac2612512565b14156107265760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e0565b61068183836001611ba0565b600061075a828461243f565b600080611b5585611b50611b46886112dd565b868863ffffffff16565b611c10565b91509150935093915050565b600061075a8284612413565b611b778383611d36565b611b846000848484611769565b6106815760405162461bcd60e51b81526004016105e090612373565b6001600160a01b038316611bbf57611bbc6009611b6183611b33565b50505b6001600160a01b038216611bde57611bdb6009611b2783611b33565b50505b6001600160a01b0383811660009081526007602052604080822054858416835291205461068192918216911683611612565b8154600090819081611c21866112dd565b9050600082118015611c5f57504386611c3b60018561243f565b81548110611c4b57611c4b612528565b60009182526020909120015463ffffffff16145b15611cbf57611c6d85611e80565b86611c7960018561243f565b81548110611c8957611c89612528565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611d2d565b856000016040518060400160405280611cd743611eed565b63ffffffff168152602001611ceb88611e80565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b95939450505050565b6001600160a01b038216611d8c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e0565b6000818152600260205260409020546001600160a01b031615611df15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105e0565b6001600160a01b0382166000908152600360205260408120805460019290611e1a908490612413565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610787600083836115e1565b60006001600160e01b03821115611ee95760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105e0565b5090565b600063ffffffff821115611ee95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105e0565b80356001600160a01b0381168114611f6957600080fd5b919050565b600060208284031215611f8057600080fd5b61075a82611f52565b60008060408385031215611f9c57600080fd5b611fa583611f52565b9150611fb360208401611f52565b90509250929050565b600080600060608486031215611fd157600080fd5b611fda84611f52565b9250611fe860208501611f52565b9150604084013590509250925092565b60008060008060006080868803121561201057600080fd5b61201986611f52565b945061202760208701611f52565b935060408601359250606086013567ffffffffffffffff8082111561204b57600080fd5b818801915088601f83011261205f57600080fd5b81358181111561206e57600080fd5b89602082850101111561208057600080fd5b9699959850939650602001949392505050565b600080600080608085870312156120a957600080fd5b6120b285611f52565b93506120c060208601611f52565b925060408501359150606085013567ffffffffffffffff808211156120e457600080fd5b818701915087601f8301126120f857600080fd5b81358181111561210a5761210a61253e565b604051601f8201601f19908116603f011681019083821181831017156121325761213261253e565b816040528281528a602084870101111561214b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561218257600080fd5b61218b83611f52565b9150602083013580151581146121a057600080fd5b809150509250929050565b600080604083850312156121be57600080fd5b6121c783611f52565b946020939093013593505050565b60008060008060008060c087890312156121ee57600080fd5b6121f787611f52565b95506020870135945060408701359350606087013560ff8116811461221b57600080fd5b9598949750929560808101359460a0909101359350915050565b60006020828403121561224757600080fd5b813561075a81612554565b60006020828403121561226457600080fd5b815161075a81612554565b60006020828403121561228157600080fd5b5035919050565b600081518084526122a0816020860160208601612456565b601f01601f19169290920160200192915050565b600083516122c6818460208801612456565b8351908301906122da818360208801612456565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061231690830184612288565b9695505050505050565b6001600160a01b0393841681529190921660208201526040810191909152608060608201819052600490820152630307830360e41b60a082015260c00190565b60208152600061075a6020830184612288565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008219821115612426576124266124e6565b500190565b60008261243a5761243a6124fc565b500490565b600082821015612451576124516124e6565b500390565b60005b83811015612471578181015183820152602001612459565b838111156109dc5750506000910152565b600181811c9082168061249657607f821691505b602082108114156114dd57634e487b7160e01b600052602260045260246000fd5b60006000198214156124cb576124cb6124e6565b5060010190565b6000826124e1576124e16124fc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461072657600080fdfea2646970667358221220f947f7e6d5d9a6d5a0fadddf7c99c6d2879356f28f6d19d8f2177b094fd2de9a64736f6c63430008060033', 
     arguments: [
        collectNFT,
     ]
    })
    var gas_estimate = await wrappedcollect.estimateGas()
    axios.get(gasStation).then(response => {
        wrappedcollect.send({
            from: account,
            gas: gas_estimate * 2,
            chainId: 137,
            maxPriorityFeePerGas: Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
            maxFeePerGas: Math.ceil(response.data.fast.maxFee * 1000000000),
        }).on('transactionHash', function (hash) {
            transactionCb(hash)
        }).on('receipt', function (receipt) {
            if (recieved === false) {
                recieved = true
                receiptCb(receipt)
            }
        }).on('error', (err) => {
            alert("Transaction Failed. Error: ", err)
            errCb(err)
        });
    })
}

export const publishPost = async (provider, account, postVars, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);
    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network")
        return;
    }
    const contract = new web3.eth.Contract(lens_hub_abi, lens_hub_address);
    var recieved = false

    web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
        var nonce = _nonce;
        const data = contract.methods.post(postVars).encodeABI();
        var est = web3.eth.estimateGas({ "to": lens_hub_address, "from": account, "data": data })
        est.then(function (gasAmount) {
            axios.get(gasStation)
                .then(response => {
                    const transaction = {
                        'from': account,
                        'to': lens_hub_address,
                        'gas': gasAmount,
                        'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                        'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                        'nonce': nonce,
                        'chainId': network_chain_id,
                        'data': data
                    };
                    web3.eth.sendTransaction(transaction).on('transactionHash', function (hash) {
                        transactionCb(hash)
                    }).on('receipt', function (receipt) {
                        if (recieved === false) {
                            recieved = true
                            receiptCb(receipt)
                        }
                    }).on('error', (err) => {
                        alert("Transaction Failed. Error: ", err)
                        errCb(err)
                    });
                })

        })
        est.catch(function (error) {
            alert("Transaction Failed. Error: ", error)
        });
    })
}

export const collectPost = async (provider, account, profileId, pubId, collectModule, erc20Token, amount, cbApproveTransaction, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);

    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network.")
        return;
    }

    const contract = new web3.eth.Contract(lens_hub_abi, lens_hub_address);

    var sentReceiptCb = false

    const erc20_contract = new web3.eth.Contract(erc20_abi, erc20Token);

    // Check to see if balance is enough
    const account_balance = await erc20_contract.methods.balanceOf(account).call();
    if (parseFloat(account_balance) < parseFloat(amount)) {
        errCb("low_balance")
        return
    }

    const approval_amount = await erc20_contract.methods.allowance(account, collectModule).call();
    if (parseFloat(approval_amount) < parseFloat(amount)) {
        web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
            var nonce = _nonce;
            web3.eth.getGasPrice().then(function (gasPrice) {
                let approveAmount = '115792089237316195423570985008687907853269984665640564039457584007913129639935';
                var approveSpending = erc20_contract.methods.approve(collectModule, approveAmount).encodeABI();
                var approveEst = web3.eth.estimateGas({ "to": erc20Token, "from": account, "data": approveSpending })
                approveEst.then(function (gasAmount) {
                    axios.get(gasStation).then(response => {
                        const approveTransaction = {
                            'from': account,
                            'to': erc20Token,
                            'gas': gasAmount,
                            'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                            'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                            'nonce': nonce,
                            'chainId': network_chain_id,
                            'data': approveSpending
                        };
                        var gotFirstReceipt = false

                        web3.eth.sendTransaction(approveTransaction).on('transactionHash', function (approveHash) {
                            cbApproveTransaction(approveHash)
                        }).on('receipt', function (approveReceipt) {
                            // Need to make sure this only runs once.
                            if (gotFirstReceipt == false) {
                                gotFirstReceipt = true

                                web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
                                    var nonce = _nonce;
                                    var calldata = "0x"
                                    if (amount && amount !== undefined && amount !== 0 && amount !== "0") {
                                        calldata = web3.eth.abi.encodeParameters(['address','uint256'], [erc20Token, amount.toString()]);
                                    }
                                    var data = contract.methods.collect(profileId, pubId, calldata).encodeABI();
                                    var est = web3.eth.estimateGas({ "to": lens_hub_address, "from": account, "data": data })
                                    est.then(function (gasAmount) {
                                        axios.get(gasStation)
                                        .then(response => {
                                            const transaction = {
                                                'from': account,
                                                'to': lens_hub_address,
                                                'gas': gasAmount,
                                                'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                                                'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                                                'nonce': nonce,
                                                'chainId': network_chain_id,
                                                'data': data
                                            };
                                            web3.eth.sendTransaction(transaction).on('transactionHash', function (hash) {
                                                transactionCb(hash)
                                            }).on('receipt', function (receipt) {
                                                if (sentReceiptCb === false) {
                                                    sentReceiptCb = true
                                                    receiptCb(receipt)
                                                }
                                            }).on('error', (err) => {
                                                alert("Transaction Failed. Error: ", err)
                                                errCb(err)
                                            });
                                        })
                                    })
                                    est.catch(function (error) {
                                        alert("Gas estimation failed")
                                    })
                                })
                            }
                        }).on('error', (err) => {
                            errCb(err)
                        });
                    })
                })
            })
        })
    }
    else {
        web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
            var nonce = _nonce;
            var calldata = "0x"
            if (amount && amount !== undefined && amount !== 0 && amount !== "0") {
                calldata = web3.eth.abi.encodeParameters(['address','uint256'], [erc20Token, amount.toString()]);
            }
            var data = contract.methods.collect(profileId, pubId, calldata).encodeABI();
            var est = web3.eth.estimateGas({ "to": lens_hub_address, "from": account, "data": data })
            est.then(function (gasAmount) {
                axios.get(gasStation)
                .then(response => {
                    const transaction = {
                        'from': account,
                        'to': lens_hub_address,
                        'gas': gasAmount,
                        'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                        'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                        'nonce': nonce,
                        'chainId': network_chain_id,
                        'data': data
                    };
                    web3.eth.sendTransaction(transaction).on('transactionHash', function (hash) {
                        transactionCb(hash)
                    }).on('receipt', function (receipt) {
                        if (sentReceiptCb === false) {
                            sentReceiptCb = true
                            receiptCb(receipt)
                        }
                    }).on('error', (err) => {
                        alert("Transaction Failed. Error: ", err)
                        errCb(err)
                    });
                })
            })
            est.catch(function (error) {
                alert("Gas estimation failed")
            })
        })
    }
}

export const wrapCollect = async (provider, account, wrappedCollectAddress, tokenId, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);

    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network before sending transaction. If your wallet doesn't support this, try again with metamask")
        return;
    }

    const contract = new web3.eth.Contract(wrapped_erc721_abi, wrappedCollectAddress);

    var sentReceiptCb = false

    web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
        var nonce = _nonce;
        var data = contract.methods.stake(tokenId).encodeABI();
        var est = web3.eth.estimateGas({ "to": wrappedCollectAddress, "from": account, "data": data })
        est.then(function (gasAmount) {
            axios.get(gasStation)
                .then(response => {
                    const transaction = {
                        'from': account,
                        'to': wrappedCollectAddress,
                        'gas': gasAmount,
                        'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                        'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                        'nonce': nonce,
                        'chainId': network_chain_id,
                        'data': data
                    };
                    web3.eth.sendTransaction(transaction).on('transactionHash', function (hash) {
                        transactionCb(hash)
                    }).on('receipt', function (receipt) {
                        if (sentReceiptCb === false) {
                            sentReceiptCb = true
                            receiptCb(receipt)
                        }
                    }).on('error', (err) => {
                        alert("Transaction Failed. Please try again. Error: ", err)
                        errCb(err)
                    });
                })

        })
        est.catch(function (error) {
            alert("Please try again. Error: ", error)
        });
    })
}

export const approveWrapperCollectContract = async (provider, account, collection_address, wrapper_address, transactionCb, receiptCb, errCb) => {
    const web3 = new Web3(provider.provider);

    const switched = await switchToPolygon();
    if (!switched) {
        alert("Please add the polygon network before sending transaction. If your wallet doesn't support this, try again with metamask")
        return;
    }

    const contract = new web3.eth.Contract(erc721_abi, collection_address);

    var sentReceipt = false

    web3.eth.getTransactionCount(account, 'pending').then(function (_nonce) {
        var nonce = _nonce;
        var data = contract.methods.setApprovalForAll(wrapper_address, true).encodeABI();
        var est = web3.eth.estimateGas({ "to": collection_address, "from": account, "data": data })
        est.then(function (gasAmount) {
            axios.get(gasStation)
                .then(response => {
                    const transaction = {
                        'from': account,
                        'to': collection_address,
                        'gas': gasAmount,
                        'maxPriorityFeePerGas': Math.ceil(response.data.fast.maxPriorityFee * 1000000000),
                        'maxFeePerGas': Math.ceil(response.data.fast.maxFee * 1000000000),
                        'nonce': nonce,
                        'chainId': network_chain_id,
                        'data': data
                    };
                    web3.eth.sendTransaction(transaction).on('transactionHash', function (hash) {
                        transactionCb(hash)
                    }).on('receipt', function (receipt) {
                        if (sentReceipt === false) {
                            sentReceipt = true
                            receiptCb(receipt)
                        }
                    }).on('error', (err) => {
                        alert("Transaction Failed. Please try again. Error: ", err)
                        errCb(err)
                    });
                })

        })
        est.catch(function (error) {
            alert("Please try again. Error: ", error)
        });
    })
}